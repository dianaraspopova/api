FORMAT: 1A
HOST: http://polls.apiblueprint.org/

# EMIAS
### Send Collected Data Request [POST]

Запрос для отправки собранных данных на сервер. URL: `api_url/api/v1/processTelemetry`

+ Request (application/json)

        {
            "remote_id": "1234123412",
            "data": {
                "steps": [
                    { Steps obj }
                ],
                "heart_rate": [
                    { HeartRate obj }
                ],
                "body_temperature": [
                    { BodyTemperature obj }
                ],
                "blood_pressure": [
                    { BloodPressure obj }
                ],
                "blood_glucose": [
                    { BloodGlucose obj }
                ],
                "height": { Height obj },
                "weight": [
                    { Weight obj }
                ],
                "hydration": [
                    { Hydration obj }
                ],
                "sleep": [
                    { Sleep obj }
                ],
                "workout": [
                    { Workout obj }
                ],
                "cycling": [
                    { DistanceCycling obj }
                ],
                "swimming": [
                    { DistanceSwimming obj }
                ],
                "body_mass_index": [
                    { BodyMassIndex obj }
                ]
            }
        }

+ Response 200 (application/json)

    + Body

            {
                "error_code": 0,
                "error_message": null,
                "success": true,
            }
            
+ Response 400 (application/json)

    + Body

            {
                "error_code": 400,
                "error_message": "Неверный формат поля steps",
                "success": false,
            }
            
### Acquire Remote Id [GET]            

+ Request `api_url/api/v1/acquireRemoteId/{oms}/{birth_date}`
    + oms (string, required, from 16 to 30)
    + birth_date (integer, required) Time, unix

+ Response 200 (application/json)

    + Body
    
            {
                "remote_id": "string" // 10 symbols long
            }
            
+ Response 400 (application/json)

    + Body
    
            {
                "error_code": 400,
                "error_message": "RemoteId does not exist for oms({oms}) and birthDate({birthDate})",
                "success": false
            }
            
# Types            
## Steps (object)
### Properties
+ `source_name`: `Google fit` (string, required) 
+ `device_name`: `Omron cs50` (string, optional) 
+ `start_time`: `1435658272` (integer, required) - Time, unix
+ `end_time`: `1435658272` (integer, require) - Time, unix
+ `value`: `16093` (integer, required) - step 
+ `system_version`: `13.1.2` (string, optional) - system version

## HeartRate (object)
### Properties
+ `source_name`: `Google fit` (string, required) 
+ `device_name`: `Omron cs50` (string, optional)
+ `start_time`: `1435658272` (integer, required) - Time, unix
+ `end_time`: `1435658272` (integer, required) - Time, unix
+ `value_max`: `134` (integer, optional) - bpm 
+ `value_min`: `120` (integer, optional) - bpm 
+ `value_avg`: `125` (integer, required) - bpm 
+ `system_version`: `13.1.2` (string, optional) - system version
+ `condition`: `NOT_SET` (heartRateConditionType, optional) - system version

## BodyTemperature (object)
### Properties
+ `source_name`: `Google fit` (string, required) 
+ `device_name`: `Omron cs50` (string, optional)
+ `start_time`: `1435658272` (integer, required) - Time, unix
+ `end_time`: `1435658272` (integer, required) - Time, unix
+ `value_max`: `36.8` (real, optional) - celsius 
+ `value_min`: `36.5` (real, optional) - celsius 
+ `value_avg`: `36.6` (real, required) - celsius 
+ `system_version`: `13.1.2` (string, optional) - system version

## BloodPressure (object)
### Properties
+ `source_name`: `Google fit` (string, required) 
+ `device_name`: `Omron cs50` (string, optional)
+ `start_time`: `1435658272` (integer, required) - Time, unix
+ `end_time`: `1435658272` (integer, required) - Time, unix
+ `blood_pressure_systolic_average`: `110.0` (real, required) - mm hg
+ `blood_pressure_systolic_max`: `110.0` (real, optional) - mm hg
+ `blood_pressure_systolic_min`: `110.0` (real, optional) - mm hg
+ `blood_pressure_diastolic_average`: `70.0` (real, required) - mm hg
+ `blood_pressure_diastolic_max`: `70.0` (real, optional) - mm hg
+ `blood_pressure_diastolic_min`: `70.0` (real, optional) - mm hg
+ `body_position`: `unset` (string, optional)
+ `blood_pressure_measurement_location`: `unset` (string, optional)
+ `system_version`: `13.1.2` (string, optional) - system version

## BloodGlucose (object)
### Properties
+ `source_name`: `Google fit` (string, required) 
+ `device_name`: `Omron cs50` (string, optional)
+ `start_time`: `1435658272` (integer, required) - Time, unix
+ `end_time`: `1435658272` (integer, required) - Time, unix
+ `value_max`: `16093.0` (real, optional) - g/mmol
+ `value_min`: `16093.0` (real, optional) - g/mmol
+ `value_avg`: `16093.0` (real, required) - g/mmol
+ `relation_to_sleep`: `unset` (string, optional) 
+ `system_version`: `13.1.2` (string, optional) - system version
+ `meal_time`: `AFTER_MEALS` (MealTimeType, optional)

## Height (object)
### Properties
+ `source_name`: `Google fit` (string, required) 
+ `device_name`: `Omron cs50` (string, optional)
+ `start_time`: `1435658272` (integer, required) - Time, unix
+ `end_time`: `1435658272` (integer, required) - Time, unix
+ `height`: `1,67` (real, required) - meter 
+ `system_version`: `13.1.2` (string, optional) - system version


## Weight (object)
### Properties
+ `source_name`: `Google fit` (string, required) 
+ `device_name`: `Omron cs50` (string, optional)
+ `start_time`: `1435658272` (integer, required) - Time, unix
+ `end_time`: `1435658272` (integer, required) - Time, unix
+ `value_max`: `45.6` (real, optional) - kg 
+ `value_min`: `46.0` (real, optional) - kg
+ `value_avg`: `46.1` (real, required) - kg 
+ `system_version`: `13.1.2` (string, optional) - system version

## Hydration (object)
### Properties
+ `source_name`: `Google fit` (string, required) 
+ `device_name`: `Omron cs50` (string, optional)
+ `start_time`: `1435658272` (integer, required) - Time, unix
+ `end_time`: `1435658272` (integer, required) - Time, unix
+ `volume`: `0.67` (real, required) - liter 
+ `system_version`: `13.1.2` (string, optional) - system version


## Sleep (object)
### Properties
+ `source_name`: `Google fit` (string, required) 
+ `device_name`: `Omron cs50` (string, optional)
+ `start_time`: `1435658272` (integer, required) - Time, unix
+ `end_time`: `1435658272` (integer, required) - Time, unix
+ `sleep_type`: `IN_BED` (SleepType, optional) - enum 
+ `system_version`: `13.1.2` (string, optional) - system version

## Workout (object)
### Properties
+ `source_name`: `Google fit` (string, required) 
+ `device_name`: `Omron cs50` (string, optional)
+ `start_time`: `1435658272` (integer, required) - Time, unix
+ `end_time`: `1435658272` (integer, required) - Time, unix
+ `duration`: `500` (integer, required) - seconds
+ `total_distance`: `1000` (integer, optional) - Meter
+ `total_energy_burned`: `200` (integer, optional) - kkal
+ `workout_type`: `running` (string, required)
+ `system_version`: `13.1.2` (string, optional) - system version

## DistanceCycling (object)
### Properties
+ `source_name`: `Google fit` (string, required) 
+ `device_name`: `Omron cs50` (string, optional)
+ `start_time`: `1435658272` (integer, required) - Time, unix
+ `end_time`: `1435658272` (integer, required) - Time, unix
+ `value`: `3000` (integer, required) - Meter
+ `system_version`: `13.1.2` (string, optional) - system version

## DistanceSwimming (object)
### Properties
+ `source_name`: `Google fit` (string, required) 
+ `device_name`: `Omron cs50` (string, optional)
+ `start_time`: `1435658272` (integer, required) - Time, unix
+ `end_time`: `1435658272` (integer, required) - Time, unix
+ `value`: `3000` (integer, required) - Meter
+ `system_version`: `13.1.2` (string, optional) - system version


## BodyMassIndex (object)
### Properties
+ `source_name`: `Google fit` (string, required) 
+ `device_name`: `Omron cs50` (string, optional)
+ `start_time`: `1435658272` (integer, required) - Time, unix
+ `end_time`: `1435658272` (integer, required) - Time, unix
+ `value`: `19.7` (real, required)
+ `system_version`: `13.1.2` (string, optional) - system version


**mealTime**
+ MealTimeType
    + `NONE`
    + `BEFORE_MEALS`
    + `AFTER_MEALS`
    
**sleepType**
+ SleepType
    + `NONE`
    + `IN_BED`
    + `AS_SLEEP`
    
**heartRateCondition**
+ HeartRateConditionType
    + `ACTIVE`
    + `NOT_SET`
    + `SEDENTARY`
    
    
**workoutType**
+ WorkoutType
    + `NONE`
    + `AMERICAN_FOOTBALL`
    + `ARCHERY`
    + `AUSTRALIAN_FOOTBALL`
    + `BADMINTON`
    + `BASEBALL`
    + `BASKETBALL`
    + `BOWLING`
    + `BOXING`
    + `CLIMBING`
    + `CRICKET`
    + `CROSS_TRAINING`
    + `CURLING`
    + `CYCLING`
    + `DANCE`
    + `DANCE_INSPIRED_TRAINING`
    + `ELLIPTICAL`
    + `EQUESTRIAN_SPORTS`
    + `FENCING`
    + `FISHING`
    + `FUNCTIONAL_STRENGTH_TRAINING`
    + `GOLF`
    + `GYMNASTICS`
    + `HANDBALL`
    + `HIKING`
    + `HOCKEY`
    + `HUNTING`
    + `LACROSSE`
    + `MARTIAL_ARTS`
    + `MIND_AND_BODY`
    + `MIXED_METABOLIC_CARDIO_TRAINING`
    + `PADDLE_SPORTS`
    + `PLAY`
    + `PREPARATION_AND_RECOVERY`
    + `RACQUETBALL`
    + `ROWING`
    + `RUGBY`
    + `RUNNING`
    + `SAILING`
    + `SKATING_SPORTS`
    + `SNOW_SPORTS`
    + `SOCCER`
    + `SOFTBALL`
    + `SQUASH`
    + `STAIR_CLIMBING`
    + `SURFING_SPORTS`
    + `SWIMMING`
    + `TABLE_TENNIS`
    + `TENNIS`
    + `TRACK_AND_FIELD`
    + `TRADITIONAL_STRENGTH_TRAINING`
    + `VOLLEYBALL`
    + `WALKING`
    + `WATER_FITNESS`
    + `WATER_POLO`
    + `WATER_SPORTS`
    + `WRESTLING`
    + `YOGA`
    + `BARRE`
    + `CORE_TRAINING`
    + `CROSS_COUNTRY_SKIING`
    + `DOWNHILL_SKIING`
    + `FLEXIBILITY`
    + `HIGH_INTENSITY_INTERVAL_TRAINING`
    + `JUMP_ROPE`
    + `KICKBOXING`
    + `PILATES`
    + `SNOWBOARDING`
    + `STAIRS`
    + `STEP_TRAINING`
    + `WHEELCHAIR_WALK_PACE`
    + `WHEELCHAIR_RUN_PACE`
    + `TAI_CHI`
    + `MIXED_CARDIO`
    + `HAND_CYCLING`
    + `DISC_SPORTS`
    + `FITNESS_GAMING`
    + `OTHER`